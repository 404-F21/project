# Generated by Django 3.2.8 on 2021-10-23 21:24

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('url', models.CharField(blank=True, max_length=150, null=True)),
                ('host', models.URLField(blank=True, null=True)),
                ('displayName', models.CharField(max_length=100, unique=True)),
                ('github', models.URLField(default='')),
                ('profilePic', models.ImageField(blank=True, upload_to='profilePics/')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('commentId', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('comment', models.TextField(default='')),
                ('contentType', models.CharField(choices=[('text/markdown', 'Common Mark'), ('text/plain', 'Utf-8'), ('application/base64', 'application/base64'), ('image/png;base64', 'PNG'), ('image/jpeg;base64', 'JPEG')], default='text/plain', max_length=20)),
                ('publishedOn', models.DateTimeField(auto_now_add=True)),
                ('authorId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='socialDistribution.author')),
            ],
        ),
        migrations.CreateModel(
            name='Inbox',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Node',
            fields=[
                ('nodeId', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('postId', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(default='', max_length=100)),
                ('source', models.URLField(blank=True, null=True)),
                ('origin', models.URLField(blank=True, null=True)),
                ('description', models.TextField(default='')),
                ('contentType', models.CharField(choices=[('text/markdown', 'Common Mark'), ('text/plain', 'Utf-8'), ('application/base64', 'application/base64'), ('image/png;base64', 'PNG'), ('image/jpeg;base64', 'JPEG')], default='text/plain', max_length=20)),
                ('categories', models.TextField(default='')),
                ('commentCount', models.IntegerField(default=0)),
                ('commentUrl', models.TextField()),
                ('publishedOn', models.DateTimeField(auto_now_add=True)),
                ('visibility', models.CharField(choices=[('public', 'PUBLIC'), ('friends', 'FRIENDS ONLY'), ('fof', 'FRIENDS OF FRIENDS'), ('toAuthor', 'AUTHOR ONLY')], default='PUBLIC', max_length=20)),
                ('unlisted', models.BooleanField(default=False)),
                ('authorId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='socialDistribution.author')),
            ],
        ),
        migrations.CreateModel(
            name='LikePost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('liker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='socialDistribution.author')),
                ('postId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='socialDistribution.post')),
            ],
        ),
        migrations.CreateModel(
            name='LikeComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commentId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='socialDistribution.comment')),
                ('liker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='socialDistribution.author')),
            ],
        ),
        migrations.AddField(
            model_name='comment',
            name='postId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='socialDistribution.post'),
        ),
        migrations.CreateModel(
            name='FriendRequest',
            fields=[
                ('reqId', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('Accept', 'Accept'), ('Decline', 'Decline'), ('Pending', 'Pending')], default='Pending', max_length=50)),
                ('author', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='to_user', to='socialDistribution.author')),
                ('friend', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='from_user', to='socialDistribution.author')),
            ],
            options={
                'unique_together': {('author', 'friend')},
            },
        ),
    ]
